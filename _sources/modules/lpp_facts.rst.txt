.. _lpp_facts_module:


lpp_facts -- Returns installed software products or fixes as facts.
===================================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Lists and returns information about installed filesets or fileset updates in Ansible facts.



Requirements
------------
The below requirements are needed on the host that executes this module.

- AIX >= 7.1 TL3
- Python >= 2.7



Parameters
----------

  filesets (optional, list, None)
    Specifies the names of software products.

    Pattern matching characters, such as ``*`` (asterisk) and ``?`` (question mark), are valid.

    Mutually exclusive with *bundle*.


  bundle (optional, str, None)
    Specifies a file or bundle to use as the fileset list source.

    Mutually exclusive with *filesets*.


  path (optional, str, None)
    Specifies an alternate install location.


  all_updates (optional, bool, False)
    Returns all updates for a fileset (default is to return the most recent level only).

    Mutually exclusive with *base_levels_only*.


  base_levels_only (optional, bool, False)
    Limits listings to base level filesets (no updates returned).

    Mutually exclusive with *all_updates*.


  reqs (optional, bool, False)
    Returns all requisites for a fileset.


  fix_type (optional, str, None)
    Specifies the type of fixes.

    ``all`` lists all the fixes installed on the system.

    ``apar`` lists only APAR fixes installed on the system.

    ``service_pack`` (alias ``sp``) lists the fixes installed in the system in service packs.

    ``technology_level`` (alias ``tl``) lists the fixes installed in the system as part of technology levels.

    Mutually exclusive with fixes.


  fixes (optional, list, None)
    Specifies the names of the fixes.

    Mutually exclusive with fix_type.





Notes
-----

.. note::
   - You can refer to the IBM documentation for additional information on the lslpp command at https://www.ibm.com/support/knowledgecenter/ssw_aix_72/l_commands/lslpp.html.
   - You can refer to the IBM documentation for additional information on the instfix command at https://www.ibm.com/support/knowledgecenter/ssw_aix_72/i_commands/instfix.html.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: Gather the fileset facts
      lpp_facts:
    - name: Check whether a fileset called 'openssh.base.client' is installed
      debug:
        msg: Fileset 'openssh.base.client' is installed
      when: "'openssh.base.client' in ansible_facts.filesets"

    - name: Populate fileset facts with the installation state for the most recent
            level of installed filesets for all of the bos.rte filesets
      lpp_facts:
        filesets: bos.rte.*
    - name: Print the fileset facts
      debug:
        var: ansible_facts.filesets

    - name: Populate fileset facts with the installation state for the most recent
            level of installed filesets for all of the bos.rte filesets with the
            requisites
      lpp_facts:
        filesets: bos.rte.*
        req: True
    - name: Print the fileset facts
      debug:
        var: ansible_facts.filesets

    - name: Populate fileset facts with the installation state for all the filesets
            contained in the Server bundle
      lpp_facts:
        bundle: Server
    - name: Print the fileset facts
      debug:
        var: ansible_facts.filesets

    - name: Populate fixes facts with the fixes which are APARs only.
      lpp_facts:
        fix_type: apar
    - name: Print the fixes facts
      debug:
        var: ansible_facts.fixes

    - name: Populate fixes facts for the list of fixes with keywords
            7200-01_AIX_ML, IV82301, IV99819, 72-02-021832_SP .
      lpp_facts:
        fixes: 7200-01_AIX_ML, IV82301, IV99819, 72-02-021832_SP
    - name: Print the fixes facts
      debug:
        var: ansible_facts.fixes



Return Values
-------------

ansible_facts (always, complex, )
  Facts to add to ansible_facts about the installed software products or fixes on the system


  filesets (success, dict, )
    Maps the fileset name to a dictionary of installed levels.


    name (always, str, devices.scsi.disk.rte)
      Fileset name


    levels (always, dict, )
      Maps the fileset level to the fileset information.


      vrmf (always, dict, "vrmf": { "fix": 0, "mod": 3, "rel": 2, "ver": 7 })
        Fileset Version Release Modification Fix (vrmf).


      state (always, str, )
        State of the fileset on the system.

        ``applied`` specifies that the fileset is installed on the system.

        ``applying`` specifies that an attempt was made to apply the specified fileset, but it did not complete successfully, and cleanup was not performed.

        ``broken`` specifies that the fileset or fileset update is broken and should be reinstalled before being used.

        ``committed`` specifies that the fileset is installed on the system.

        ``efixlocked`` specifies that the fileset is installed on the system and is locked by the interim fix manager.

        ``obsolete`` specifies that the fileset was installed with an earlier version of the operating system but has been replaced by a repackaged (renamed) newer version.

        ``committing`` specifies that an attempt was made to commit the specified fileset, but it did not complete successfully, and cleanup was not performed.

        ``rejecting`` specifies that an attempt was made to reject the specified fileset, but it did not complete successfully, and cleanup was not performed.


      ptf (when available, str, )
        Program temporary fix.


      type (always, str, )
        Fileset type.

        ``install`` specifies install image (base level).

        ``maintenance`` specifies maintenance level update.

        ``enhancement``.

        ``fix``.


      description (always, str, )
        Fileset description.


      emgr_locked (always, bool, )
        Specifies whether fileset is locked by the interim fix manager.


      sources (always, list, ['/etc/objrepos'])
        Source paths.


      requisites (when available, dict, {'requisites': {'coreq': {'bos.aso': {'name': 'bos.aso', 'level': ['7.2.0.0']}}}})
        Requisites of the filesets


      ver_cons_check (always, str, OK)
        Status of fileset version consistency check




  fixes (success, dict, )
    Maps the fixes name to the dictionary of filesets.


    name (always, str, IV82301)
      fixes name


    abstract (always, str, clcomd generates coredump)
      Abstract of the fix


    filesets (always, dict, )
      Maps the fileset level to the fixes information.


      inst_level (always, str, "inst_level": "7.2.1.0")
        Installed level.


      name (always, str, )
        fileset name


      reqLevel (always, str, )
        Required level for the fix.


      status (always, str, )
        ``Down Level`` specifies that the fileset installed on the system is at a lower level than the required level

        ``Correct level`` specifies that the fileset installed on the system is at the same level as the required level

        ``Superseded`` specifies that the fileset installed on the system is at a higher level than the required level

        ``not installed`` specifies that the fileset is not installed on the system








Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- AIX Development Team (@pbfinley1911)

